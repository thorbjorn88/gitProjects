#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
The Phase Vocoder 
\end_layout

\begin_layout Standard
This paper follows the development of Reiss and McPherson 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

.
\end_layout

\begin_layout Section*
Introduction
\end_layout

\begin_layout Standard
Most audio effects are performed in the time domain.
 This report focuses on a group of audio effects which are performed in
 the frequency domain.
 The phase vocoder is a term used to describe these audio effects.
 The phase vocoder process consists of the following steps.
 
\end_layout

\begin_layout Enumerate
Select the first N samples of the input signal which may have arbitrary
 length.
 These N samples are the first frame.
\end_layout

\begin_layout Enumerate
Multiply the frame by a window function of length N.
 
\end_layout

\begin_layout Enumerate
Apply a fast Fourier transform (FFT) of length M≥N to the windowed signal.
 
\end_layout

\begin_layout Enumerate
Perform the particular phase vocoder effect to frequency domain signal.
\end_layout

\begin_layout Enumerate
Perform an inverse fast Fourier transform IFFT on the processed frequency
 domain signal.
\end_layout

\begin_layout Enumerate
Add the M output samples to the output buffer.
 
\end_layout

\begin_layout Enumerate
Hop to the next frame by hop size H which is typically less than N as the
 overlap add method is uses to stitch the frames into one uninterrupted
 signal.
\end_layout

\begin_layout Standard
The windowing, the FFT, IFFT, and overlap add method are not covered in
 detail in this report.
 The focus will be on effects that can be performed using the phase vocoder
 technique.
 In particular robatization, whisperization, time scaling, and pitch shifting
 will be discussed.
 
\end_layout

\begin_layout Section*
Robotization and Whisperization
\end_layout

\begin_layout Standard
Robotization and whisperization are instructive, if not musical, effects.
 Both these effects are intended to operate on a voice and operate by modifying
 the phase in each bin of the frequency domain signal.
\end_layout

\begin_layout Standard
Robotization gets its name from the monotone robot like sound it results
 in.
 In step 4 of the above procedure the phase in each bin is set to zero while
 the magnitude is left alone.
 Since magnitude is unchanged, the overall shape of the spectrum is also
 unchanged, thus the vocal formants are preserved and the voice is still
 intelligible.
 However, by setting the phase in each bin to zero each frequency component
 will restart from zero phase with each frame rather than having a smooth
 continuous transition between frames.
 The result is a constant pitch related to the hop size between frames where
 
\begin_inset Formula $f_{robot}=f_{s}/H$
\end_inset

 where f
\begin_inset script subscript

\begin_layout Plain Layout
s
\end_layout

\end_inset

 is the sample rate and H is the hop size.
 The quality of the effect is also dependent on the window size.
 For longer windows the resetting of phase is less frequent hence the effect
 is less noticeable, and with very short windows the clarity of the output
 is reduced making the voice hard to understand.
 A medium sized window on the order of 256-1024 samples yields the best
 results.
 
\end_layout

\begin_layout Standard
While robotization attempts to regulate the pitch of a voice, whisperization
 attempts to remove any sense of pitch at all.
 Whisperization is implemented in almost the same way as robotization but
 the phase is set to a random value between 0 and 2π.
 A random phase is selected for each bin in the frame resulting in the loss
 of any sense of periodicity.
 Again the magnitude is unaffected in order to preserve vocal formants.
 For whiserpization shorter frames on the order of 64-256 samples work best.
 
\end_layout

\begin_layout Standard
Because both robotization and whisperization take advantage of artifacts
 of the phase vocoder process the constant overlap-add criterion for choosing
 the hop size in relation to the window size is not important.
 
\end_layout

\begin_layout Section*
Time Scaling and Pitch Shifting
\end_layout

\begin_layout Standard
A useful application of the phase vocoder is scaling time or shifting pitch
 while leaving the other unaffected.
 First we will look at time scaling.
 In order to perform time scaling without affecting pitch the relationship
 Φ=ωt or phase = frequency multiplied with time.
 By allowing phase to be adjust time can be changed while leaving frequency
 unaffected.
 For time scaling the first 3 steps of the phase vocoder are performed as
 usual but steps 5 through 7 are modified to accommodate the change in time.
 A stretching ration R relates the hop size for the analysis steps (1-3)
 and the synthesis steps (5-7) denoted as h
\begin_inset script subscript

\begin_layout Plain Layout
a
\end_layout

\end_inset

 and h
\begin_inset script subscript

\begin_layout Plain Layout
s
\end_layout

\end_inset

 respectively such that 
\begin_inset Formula $h_{s}=Rh_{a}$
\end_inset

.
 The change in frequency and amplitude for each bin is calculated by the
 following equations.
 These phase and amplitude increments are proportional to the instantaneous
 frequency.
 The variable h
\begin_inset script subscript

\begin_layout Plain Layout
a
\end_layout

\end_inset

 is the hop size for the analysis portion of the algorithm.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\text{Δ}Φ_{i}(n,k)=\frac{ω_{k}h_{a}+arg(Φ_{d}(n,k))}{h_{a}}ωΔ
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\text{Δ}\text{A}_{i}(n,k)=\frac{A_{i}(n,k)-A_{i}(n-1,k)}{h_{a}}ω\text{Δ}
\]

\end_inset


\end_layout

\begin_layout Standard
These phase and amplitude increment values will be used in the synthesis
 part of the algorithm.
 The phase for the re-synthesis stage can be calculated at each sample m
 using
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
θ(m,k)=θ(m-1,k)+\text{Δ}\text{Φ}_{i}(n,k)
\]

\end_inset


\end_layout

\begin_layout Standard
The phase for the synthesis or output signal is incremented by the same
 amount as was calculated above for analysis but for the synthesis hop size.
 The same method cannot be used to scale the amplitude because it would
 lead to serious artifacts.
 Instead the increment is calculated using the synthesis hop size to ensure
 that the amplitude will be the same at the beginning and end of the hops
 in both synthesis and analysis.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\text{Δ}\text{A}_{is}(n,k)=\frac{\text{A}_{i}(n,k)-\text{A}_{i}(n-1,k)}{h_{s}}
\]

\end_inset


\end_layout

\begin_layout Standard
The amplitude over the synthesis hop is then calculated.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
A_{k}(m,k)=A_{k}(m-1,k)+\text{Δ}\text{A}_{ks}(n,k)
\]

\end_inset


\end_layout

\begin_layout Standard
The sinusoidal components are then summed to synthesize the output which
 has been scaled in time.
 
\end_layout

\begin_layout Standard
Pitch shifting without changing the time of the signal can be used leveraging
 the above algorithm for time scaling.
 Suppose a time scaling factor of R is applied to each block of N samples
 of input resulting in R∙N output samples.
 If these samples were played at a sample rate of R∙f
\begin_inset script subscript

\begin_layout Plain Layout
s
\end_layout

\end_inset

the result would be a higher pitched version of the signal with the same
 time duration.
 In practice it doesn't make a lot of sense to have a different sample-rate
 for input and output.
 An alternative is to achieve a similar result using interpolation to fit
 R∙N samples in the space of N.
 
\end_layout

\begin_layout Section*
Phase Vocoder Artifacts
\end_layout

\begin_layout Standard
The effects mentioned above often rely on linear interpolation.
 This presents a problem because so many elements of music are non-linear.
 Problems also arise with the distortion of phase relationships because
 phase error is cumulative.
 A note being struck can be considered a transient.
 Transient smearing occurs when phase coherence is lost at a transient,
 the result is transient smearing which softens the attack of the note and
 gives it an unnatural sound.
 A third problem is 
\begin_inset Quotes eld
\end_inset

phasiness
\begin_inset Quotes erd
\end_inset

 which adds a reverb-like quality to the sound.
 
\end_layout

\begin_layout Section*
Conclusion
\end_layout

\begin_layout Standard
The phase vocoder is a fairly simple yet powerful tool to manipulate frequency
 components of an audio signal.
 It is tempting initially to focus on the magnitude of a signal but it becomes
 clear that the phase of the signal, and how it is affected, has huge implicatio
ns on the quality of the overall effect.
 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

Reiss, Joshua D., and Andrew McPherson.
 Audio effects: theory, implementation and application.
 CRC Press, 2014.
\end_layout

\end_body
\end_document
